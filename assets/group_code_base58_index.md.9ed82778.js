import{_ as t,c as e,o as d,a}from"./app.a7d8838a.js";const b=JSON.parse('{"title":"Base58编码介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"Base58的由来","slug":"base58的由来","link":"#base58的由来","children":[]},{"level":2,"title":"Base58编码表","slug":"base58编码表","link":"#base58编码表","children":[]},{"level":2,"title":"Base58 编码与解码","slug":"base58-编码与解码","link":"#base58-编码与解码","children":[]},{"level":2,"title":"Base58Check","slug":"base58check","link":"#base58check","children":[]},{"level":2,"title":"Base58库","slug":"base58库","link":"#base58库","children":[]}],"relativePath":"group/code/base58/index.md"}'),l={name:"group/code/base58/index.md"},n=a('<h1 id="base58编码介绍" tabindex="-1">Base58编码介绍 <a class="header-anchor" href="#base58编码介绍" aria-hidden="true">#</a></h1><h2 id="base58的由来" tabindex="-1">Base58的由来 <a class="header-anchor" href="#base58的由来" aria-hidden="true">#</a></h2><ul><li>Base58 是在 比特币中使用的一种独特的编码方式，主要用于产生比特币的钱包地址</li><li>相比 Base64编码，Base58不使用数字 &quot;0&quot;，字母大写&quot;O&quot;，字母大写 &quot;I&quot;，和字母小写 &quot;l&quot;，以及 &quot;+&quot; 和 &quot;/&quot; 符号</li></ul><h2 id="base58编码表" tabindex="-1">Base58编码表 <a class="header-anchor" href="#base58编码表" aria-hidden="true">#</a></h2><table><thead><tr><th>Value</th><th style="text-align:center;">Cjaracter</th><th>Value</th><th style="text-align:center;">Cjaracter</th><th>Value</th><th style="text-align:center;">Cjaracter</th></tr></thead><tbody><tr><td>0</td><td style="text-align:center;">1</td><td>1</td><td style="text-align:center;">2</td><td>2</td><td style="text-align:center;">3</td></tr><tr><td>3</td><td style="text-align:center;">4</td><td>4</td><td style="text-align:center;">5</td><td>5</td><td style="text-align:center;">6</td></tr><tr><td>6</td><td style="text-align:center;">7</td><td>7</td><td style="text-align:center;">8</td><td>8</td><td style="text-align:center;">9</td></tr><tr><td>9</td><td style="text-align:center;">A</td><td>10</td><td style="text-align:center;">B</td><td>11</td><td style="text-align:center;">C</td></tr><tr><td>12</td><td style="text-align:center;">D</td><td>13</td><td style="text-align:center;">E</td><td>14</td><td style="text-align:center;">F</td></tr><tr><td>15</td><td style="text-align:center;">G</td><td>16</td><td style="text-align:center;">H</td><td>17</td><td style="text-align:center;">J</td></tr><tr><td>18</td><td style="text-align:center;">K</td><td>19</td><td style="text-align:center;">L</td><td>20</td><td style="text-align:center;">M</td></tr><tr><td>21</td><td style="text-align:center;">N</td><td>22</td><td style="text-align:center;">P</td><td>23</td><td style="text-align:center;">Q</td></tr><tr><td>24</td><td style="text-align:center;">R</td><td>25</td><td style="text-align:center;">S</td><td>26</td><td style="text-align:center;">T</td></tr><tr><td>27</td><td style="text-align:center;">U</td><td>28</td><td style="text-align:center;">V</td><td>29</td><td style="text-align:center;">W</td></tr><tr><td>30</td><td style="text-align:center;">X</td><td>31</td><td style="text-align:center;">Y</td><td>32</td><td style="text-align:center;">Z</td></tr><tr><td>33</td><td style="text-align:center;">a</td><td>34</td><td style="text-align:center;">b</td><td>35</td><td style="text-align:center;">c</td></tr><tr><td>36</td><td style="text-align:center;">d</td><td>37</td><td style="text-align:center;">e</td><td>38</td><td style="text-align:center;">f</td></tr><tr><td>39</td><td style="text-align:center;">g</td><td>40</td><td style="text-align:center;">h</td><td>41</td><td style="text-align:center;">i</td></tr><tr><td>42</td><td style="text-align:center;">j</td><td>43</td><td style="text-align:center;">k</td><td>44</td><td style="text-align:center;">m</td></tr><tr><td>45</td><td style="text-align:center;">n</td><td>46</td><td style="text-align:center;">o</td><td>47</td><td style="text-align:center;">p</td></tr><tr><td>48</td><td style="text-align:center;">q</td><td>49</td><td style="text-align:center;">r</td><td>50</td><td style="text-align:center;">s</td></tr><tr><td>51</td><td style="text-align:center;">t</td><td>52</td><td style="text-align:center;">u</td><td>53</td><td style="text-align:center;">v</td></tr><tr><td>54</td><td style="text-align:center;">w</td><td>55</td><td style="text-align:center;">x</td><td>56</td><td style="text-align:center;">y</td></tr><tr><td>57</td><td style="text-align:center;">z</td><td></td><td style="text-align:center;"></td><td></td><td style="text-align:center;"></td></tr></tbody></table><h2 id="base58-编码与解码" tabindex="-1">Base58 编码与解码 <a class="header-anchor" href="#base58-编码与解码" aria-hidden="true">#</a></h2><p>Base58 的输入是一个[0,256)的值的流，输出结果是一个[0,58) 的值的流。然后将每个值去查字母表，得出一个可视字符串。转换过程实际上就是一个256进制的值转换为一个58进制的值。</p><h2 id="base58check" tabindex="-1">Base58Check <a class="header-anchor" href="#base58check" aria-hidden="true">#</a></h2><p>比特币之所以加入改进版的 Base58 算法，主要为了解决 Base58 导出的字符串没有校验机制，这样，在传播过程中，如果漏写了几个字符，会检测不出来。所以使用了改进版的算法 Base58Check。</p><p>实现是：在encode前，在输入流尾部加入输入内容的hash值（4个字节）。然后再对输入流进行 Base58Encode。</p><p>在 decode 时候：先 Base58Decode, 然后拆成两部分（内容和校验值），判断对内容计算的校验值和校验值字段是否一致。</p><h2 id="base58库" tabindex="-1">Base58库 <a class="header-anchor" href="#base58库" aria-hidden="true">#</a></h2><p>Go_Base58库:<a href="https://github.com/shengdoushi/base58" target="_blank" rel="noreferrer">https://github.com/shengdoushi/base58</a><br> BTC_Base58库： <a href="https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp" target="_blank" rel="noreferrer">https://github.com/bitcoin/bitcoin/blob/master/src/base58.cpp</a></p><p>1RMB100分钱 1RMB10 角钱</p><p>100万</p><p>100 000 000</p>',16),r=[n];function s(i,c,h,g,x,o){return d(),e("div",null,r)}const u=t(l,[["render",s]]);export{b as __pageData,u as default};
