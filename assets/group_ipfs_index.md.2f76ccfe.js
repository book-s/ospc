import{_ as s,c as l,o as a,a as e}from"./app.a7d8838a.js";const f=JSON.parse('{"title":"IPFS介绍","description":"","frontmatter":{},"headers":[{"level":2,"title":"1、 IPFS","slug":"_1、-ipfs","link":"#_1、-ipfs","children":[]},{"level":2,"title":"2、HTTP与IPFS","slug":"_2、http与ipfs","link":"#_2、http与ipfs","children":[{"level":3,"title":"2.1、HTTP目前所存在问题","slug":"_2-1、http目前所存在问题","link":"#_2-1、http目前所存在问题","children":[]},{"level":3,"title":"2.2、IPFS","slug":"_2-2、ipfs","link":"#_2-2、ipfs","children":[]}]},{"level":2,"title":"3、IPFS工作原理","slug":"_3、ipfs工作原理","link":"#_3、ipfs工作原理","children":[]},{"level":2,"title":"IPFS特性","slug":"ipfs特性","link":"#ipfs特性","children":[]},{"level":2,"title":"IPFS相关操作","slug":"ipfs相关操作","link":"#ipfs相关操作","children":[]}],"relativePath":"group/ipfs/index.md"}'),i={name:"group/ipfs/index.md"},n=e(`<h1 id="ipfs介绍" tabindex="-1">IPFS介绍 <a class="header-anchor" href="#ipfs介绍" aria-hidden="true">#</a></h1><h2 id="_1、-ipfs" tabindex="-1">1、 IPFS <a class="header-anchor" href="#_1、-ipfs" aria-hidden="true">#</a></h2><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>一个点对点的分布式超媒体分发协议</p></div><h2 id="_2、http与ipfs" tabindex="-1">2、HTTP与IPFS <a class="header-anchor" href="#_2、http与ipfs" aria-hidden="true">#</a></h2><p>HTTP超文本传输协议，全球统一的信息格式协议，为分发和显示信息提供规范</p><h3 id="_2-1、http目前所存在问题" tabindex="-1">2.1、HTTP目前所存在问题 <a class="header-anchor" href="#_2-1、http目前所存在问题" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>效率低下，服务器成本昂贵</li><li>历史文件寿命--网页平均使用寿命为100天</li><li>中心化网络--中心化很容易被控制</li></ul></div><h3 id="_2-2、ipfs" tabindex="-1">2.2、IPFS <a class="header-anchor" href="#_2-2、ipfs" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>IPFS是一个旨在创建持久，分布式存储，文件共享的网络传输协议。IPFS通过内容寻址。在IPFS内容中，节点构成一个分布式的文件系统。</p></div><h2 id="_3、ipfs工作原理" tabindex="-1">3、IPFS工作原理 <a class="header-anchor" href="#_3、ipfs工作原理" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>每个文件以及其中的所有块都会被赋予一个加密哈希</li><li>IPFS会通过网络删除具有相同哈希值的文件，通过计算判断哪些文件是冗余的</li><li>可以追踪历史记录</li><li>每个网络节点只存储感兴趣的内容，以及一些索引</li><li>查找文件时，通过文件哈希可以在网络中找到存储文件的节点，进而找到相应的文件。</li><li>使用IPNS（去中心化的命名系统），可以将每个文件都命名为易读的名字，通过搜索就可以很容易的找到想要查看的文件。</li></ul></div><h2 id="ipfs特性" tabindex="-1">IPFS特性 <a class="header-anchor" href="#ipfs特性" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>基础内容寻址，而不是基于域名寻址</li><li>提供文件的历史版本控制器，并且可以让多个节点保存不同版本的文件</li><li>IPFS网络基于区块链，该链中存储的是互联网文件的哈希值</li><li>通过使用代币（filecoin）的激励作用，让各个节点有动力去存储数据局。</li><li>FileCoin 一个由加密货币驱动的存储网络。旷工通过为网络提供开放的硬盘空间获得FileCoin，用户能使用FileCoin来支付在去中心化网络中访问文件的费用。</li></ul></div><h2 id="ipfs相关操作" tabindex="-1">IPFS相关操作 <a class="header-anchor" href="#ipfs相关操作" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><ul><li>IPFS获取 <a href="http://docs.ipfs.io" target="_blank" rel="noreferrer">http://docs.ipfs.io</a></li><li>下载 <a href="https://dist.ipfs.tech/#kubo" target="_blank" rel="noreferrer">https://dist.ipfs.tech/#kubo</a></li><li>安装</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">tar</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-xvzf</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">kubo_v0.14.0_darwin-amd64.tar.gz</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> cd kubo</span></span>
<span class="line"><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> ./install.sh</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li>项目配置</li></ul><blockquote><ul><li>创建IPFS节点 新建IPFS目录</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">//</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">初始化目录</span></span>
<span class="line"><span style="color:#FFCB6B;">ipfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><ul><li>进入指定目录</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.ipfs</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>查看节点ID</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">ipfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">id</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><ul><li>启动节点服务器</li></ul><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">ipfs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">daemon</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></blockquote></div>`,15),p=[n];function t(c,r,o,d,h,u){return a(),l("div",null,p)}const _=s(i,[["render",t]]);export{f as __pageData,_ as default};
