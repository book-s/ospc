import{_ as s,c as n,o as l,a}from"./app.a7d8838a.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[]},{"level":2,"title":"Go语言数据类型","slug":"go语言数据类型","link":"#go语言数据类型","children":[]}],"relativePath":"group/go/basics/datatype.md"}'),t={name:"group/go/basics/datatype.md"},e=a(`<h2 id="数据类型" tabindex="-1">数据类型 <a class="header-anchor" href="#数据类型" aria-hidden="true">#</a></h2><div class="info custom-block"><p class="custom-block-title">整型</p><ul><li>有符号整型：<code>int8、int16、int32、int64</code></li></ul><table><thead><tr><th>类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td>int 8</td><td style="text-align:center;">有符号 8位整型 (-128 到 127)</td></tr><tr><td>int 16</td><td style="text-align:center;">有符号 16位整型 (-32768 到 32767)</td></tr><tr><td>int 32</td><td style="text-align:center;">有符号 32位整型 (-2147483648 到 2147483647)</td></tr><tr><td>int 64</td><td style="text-align:center;">有符号 64位整型 (-9223372036854775808 到 9223372036854775807)</td></tr></tbody></table><ul><li>无符号整型：<code>uint8、uint16、uint32、uint64</code></li></ul><table><thead><tr><th>类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td>uint 8</td><td style="text-align:center;">无符号8位整型（0 到 255）</td></tr><tr><td>uint16</td><td style="text-align:center;">无符号16位整型（0 到 65535）</td></tr><tr><td>uint32</td><td style="text-align:center;">无符号32位整型（0 到 4294967295)</td></tr><tr><td>uint64</td><td style="text-align:center;">无符号64位整型（0 到 18446744073709551615)</td></tr></tbody></table><ul><li>特殊整型</li></ul><table><thead><tr><th>类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td>uint</td><td style="text-align:center;">32位操作系统上就是uint32，64位操作系统上就是uint64</td></tr><tr><td>int</td><td style="text-align:center;">32位操作系统上就是int32，64位操作系统上就是int64</td></tr><tr><td>uintptr</td><td style="text-align:center;">无符号整型，用于存放一个指针</td></tr></tbody></table><div class="danger custom-block"><p class="custom-block-title">注意</p><ul><li>在使用<code>int</code>和 <code>uint</code>类型时，不能假定它是32位或64位的整型，而是考虑<code>int</code>和<code>uint</code>可能在不同平台上的差异。</li><li>获取对象的长度的内建<code>len()</code>函数返回的长度可以根据不同平台的字节长度进行变化。实际使用中，切片或 map 的元素数量等都可以用<code>int</code>来表示。在涉及到二进制传输、读写文件的结构描述时，为了保持文件的结构不会受到不同编译目标平台字节长度的影响，不要使用<code>int</code>和 <code>uint</code>。</li></ul></div></div><div class="info custom-block"><p class="custom-block-title">整型</p><ul><li>其中</li></ul><blockquote><ul><li><code>uint8</code>就是我们熟知的<code>byte</code>型</li><li><code>int16</code>对应C语言中的<code>short</code>型</li><li><code>int64</code>对应C语言中的<code>long</code>型</li></ul></blockquote></div><div class="tip custom-block"><p class="custom-block-title">数字字面量语法（Number literabls syntax）</p><div class="language-go line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki material-palenight"><code><span class="line"></span>
<span class="line"><span style="color:#89DDFF;">package</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">main</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">fmt</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">func</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> a </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//输出整数</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%b </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//输出二进制</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// 八进制 以0开头</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> b </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">06</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%o </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> b</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">//十六进制 以0x开头</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">var</span><span style="color:#A6ACCD;"> c </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0xff</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%x </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	fmt</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">Printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%X </span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> c</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></div><h2 id="go语言数据类型" tabindex="-1">Go语言数据类型 <a class="header-anchor" href="#go语言数据类型" aria-hidden="true">#</a></h2><p>Go 语言中支持多种内置数据类型，包括：</p><ul><li>数字类型：</li></ul><blockquote><ul><li>整型: int、int8、int16、int32、int64</li><li>浮点型:uint、uint8、uint16、uint32、uint64、float32、float64</li><li>复数类型:complex64、complex128</li></ul></blockquote><ul><li>字符串类型：表示一串固定长度的字符序列。</li><li>布尔类型：表示真假的值，只有 true 和 false 两种取值。</li><li>常量类型：在编译时就已确定且不能改变的值。</li><li>指针类型：指向某个变量的内存地址的指针。</li><li>数组类型：固定长度的数据序列。</li><li>切片类型：可动态增长的数据序列。</li><li>结构体类型：用来组织多个不同类型的字段的自定义数据类型。</li><li>接口类型：抽象的类型，用来表示一组方法的集合。</li></ul><p>除了这些内置数据类型，Go 语言还支持自定义数据类型，<br> 例如，你可以定义一个别名来代表某个类型：</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">type</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">MyInt</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">int</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者定义一个类型别名来表示某个结构</p>`,12),p=[e];function o(c,r,i,d,y,D){return l(),n("div",null,p)}const C=s(t,[["render",o]]);export{u as __pageData,C as default};
